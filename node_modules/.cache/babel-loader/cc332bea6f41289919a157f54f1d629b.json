{"ast":null,"code":"var _jsxFileName = \"D:\\\\New folder (6)\\\\demo\\\\src\\\\pages\\\\betaFailAnalysis\\\\BetaFailAnalysisPanel\\\\table\\\\AccountActivityTable.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable react/jsx-key */\nimport { useTable, useSortBy } from 'react-table';\nimport { useMemo } from 'react';\nimport { RootContainerTable } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateTable = props => {\n  _s();\n\n  const data = useMemo(() => props.data, []);\n  const columns = useMemo(() => props.columns, []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, useSortBy);\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n          children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: column.isSorted ? column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateTable, \"2M+cEGJjZRLIqxt38XQe/AMxJJk=\", false, function () {\n  return [useTable];\n});\n\n_c = CreateTable;\n\nconst BetaTable = props => {\n  return /*#__PURE__*/_jsxDEV(RootContainerTable, {\n    children: /*#__PURE__*/_jsxDEV(CreateTable, {\n      data: props.data,\n      columns: props.columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = BetaTable;\nexport default BetaTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CreateTable\");\n$RefreshReg$(_c2, \"BetaTable\");","map":{"version":3,"sources":["D:/New folder (6)/demo/src/pages/betaFailAnalysis/BetaFailAnalysisPanel/table/AccountActivityTable.tsx"],"names":["useTable","useSortBy","useMemo","RootContainerTable","CreateTable","props","data","columns","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","BetaTable"],"mappings":";;;AAAA;;AACA;;AACA;AAEA,SAASA,QAAT,EAAkBC,SAAlB,QAAmC,aAAnC;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,SAAQC,kBAAR,QAAiC,UAAjC;;;AAIA,MAAMC,WAAW,GAAIC,KAAD,IAAgB;AAAA;;AAClC,QAAMC,IAAI,GAAGJ,OAAO,CAAC,MAAKG,KAAK,CAACC,IAAZ,EAAiB,EAAjB,CAApB;AAEA,QAAMC,OAAO,GAAGL,OAAO,CAAC,MAAKG,KAAK,CAACE,OAAZ,EAAoB,EAApB,CAAvB;AAEA,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,iBAAjB;AAAoCC,IAAAA,YAApC;AAAkDC,IAAAA,IAAlD;AAAwDC,IAAAA;AAAxD,MACJZ,QAAQ,CAAC;AAAEO,IAAAA,OAAF;AAAWD,IAAAA;AAAX,GAAD,EAAmBL,SAAnB,CADV;AAGA,sBACE,sBAAWO,aAAa,EAAxB;AAAA,4BACE;AAAA,gBAEGE,YAAY,CAACG,GAAb,CAAkBC,WAAD,iBAChB,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,kBACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAD,iBACvB,mBAAQA,MAAM,CAACC,cAAP,CAAsBD,MAAM,CAACE,oBAAP,EAAtB,CAAR;AAAA,qBAA+DF,MAAM,CAACG,MAAP,CAAc,QAAd,CAA/D,eACC;AAAA,sBACMH,MAAM,CAACI,QAAP,GACGJ,MAAM,CAACK,YAAP,GACE,KADF,GAEE,KAHL,GAIG;AALT;AAAA;AAAA;AAAA;AAAA,kBADD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADD;AAFH;AAAA;AAAA;AAAA;AAAA,YADF,eAmBE,sBAAWb,iBAAiB,EAA5B;AAAA,gBACGE,IAAI,CAACE,GAAL,CAAUU,GAAD,IAAS;AAChBX,QAAAA,UAAU,CAACW,GAAD,CAAV;AACD,4BACE,mBAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,oBACGD,GAAG,CAACE,KAAJ,CAAUZ,GAAV,CAAea,IAAD,IAAU;AACvB,gCAAQ,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,wBAA8BD,IAAI,CAACN,MAAL,CAAY,MAAZ;AAA9B;AAAA;AAAA;AAAA;AAAA,oBAAR;AACD,WAFA;AADH;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OATA;AADH;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CA1CD;;GAAMhB,W;UAMFJ,Q;;;KANEI,W;;AA4CN,MAAMwB,SAAS,GAAIvB,KAAD,IAAgB;AAChC,sBACE,QAAC,kBAAD;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEA,KAAK,CAACC,IAAzB;AAA+B,MAAA,OAAO,EAAED,KAAK,CAACE;AAA9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;MAAMqB,S;AAQN,eAAeA,SAAf","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/* eslint-disable react/jsx-key */\r\n\r\nimport { useTable,useSortBy } from 'react-table'\r\nimport { useMemo } from 'react'\r\n\r\nimport {RootContainerTable} from './styles'\r\n \r\n\r\n\r\nconst CreateTable = (props: any) => {\r\n  const data = useMemo(() =>props.data,[])\r\n\r\n  const columns = useMemo(() =>props.columns,[])\r\n\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    useTable({ columns, data },useSortBy)\r\n\r\n  return (\r\n    <table {...getTableProps()}>\r\n      <thead>\r\n   \r\n        {headerGroups.map((headerGroup) => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map((column:any) => (\r\n              <th {...column.getHeaderProps(column.getSortByToggleProps())}>{column.render('Header')}\r\n               <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? ' ðŸ”½'\r\n                        : ' ðŸ”¼'\r\n                      : ''}\r\n                  </span>\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row) => {\r\n           prepareRow(row)\r\n          return (\r\n            <tr {...row.getRowProps()}>\r\n              {row.cells.map((cell) => {\r\n                return (<td {...cell.getCellProps()}>{cell.render('Cell')}</td>)\r\n              })}\r\n            </tr>\r\n          )\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nconst BetaTable = (props: any) => {\r\n  return (\r\n    <RootContainerTable>\r\n      <CreateTable data={props.data} columns={props.columns} />\r\n    </RootContainerTable>\r\n  )\r\n}\r\n\r\nexport default BetaTable\r\n"]},"metadata":{},"sourceType":"module"}